<?xml version="1.0" encoding="UTF-8"?>
<!-- !DOCTYPE interface SYSTEM "http://source.sakaiproject.org/ambrosia/ambrosia.dtd" -->

<!--
/**********************************************************************************
 * $URL$
 * $Id$
 ***********************************************************************************
 *
 * Copyright (c) 2008, 2009, 2010, 2011, 2012, 2013, 2014 Etudes, Inc.
 * 
 * Portions completed before September 1, 2008
 * Copyright (c) 2007, 2008 The Regents of the University of Michigan & Foothill College, ETUDES Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 **********************************************************************************/
-->

<interface focus="title">

	<!-- attachment picker view -->
	<attachmentPicker>
		<destination template="/attachments" />
	</attachmentPicker>

	<!--mode bar-->
	<modeContainer>
		<alias to="ToolModeFragment" toolId="sakai.mneme" />
	</modeContainer>

	<title>
		<message selector="testSettings-title" />
	</title>

	<header>
		<message selector="testSettings-header">
			<model type="icon" icon="/icons/gear-edit.png" />
		</message>
	</header>

	<container>
	   <!-- repeat the nav up top w/o access key -->
		<navigationBar>
			<container>
				<navigation title="prev" description="settings-prev-description" style="BUTTON" submit="TRUE">
					<icon icon="/icons/prev.gif" style="LEFT" />
					<disabled>
						<hasValueDecision reversed="TRUE" model="prevAssessmentId" />
					</disabled>
					<destination template="/assessment_settings/{0}{1}">
						<model ref="prevAssessmentId" />
						<model ref="return" />
					</destination>
					<included>
						<hasValueDecision model="position" />
					</included>
				</navigation>
				<text>
					<message selector="n-of-size">
						<model ref="position" />
						<model ref="size" />
					</message>
					<included>
						<hasValueDecision model="position" />
					</included>
				</text>
				<navigation title="next" description="settings-next-description" style="BUTTON" submit="TRUE">
					<icon icon="/icons/next.gif" style="RIGHT" />
					<disabled>
						<hasValueDecision reversed="TRUE" model="nextAssessmentId" />
					</disabled>
					<destination template="/assessment_settings/{0}{1}">
						<model ref="nextAssessmentId" />
						<model ref="return" />
					</destination>
					<included>
						<hasValueDecision model="position" />
					</included>
				</navigation>
				<divider>
					<included>
						<hasValueDecision model="position" />
					</included>
				</divider>
				<navigation title="return" description="return-description" style="BUTTON" submit="TRUE">
					<icon icon="/icons/return.png" style="LEFT" />
					<destination template="{0}">
						<model ref="return" />
					</destination>
				</navigation>
			</container>
		</navigationBar>

		<!-- title -->
		<textEdit id="title" title="title" cols="40">
			<model ref="assessment.title" type="text" />
		</textEdit>

		<section>
			<title highlighted="TRUE">
				<message selector="settings" />
			</title>
			<container>

				<section>
					<container>

						<!-- type - if not locked -->
						<selection id="type" title="type">
							<model ref="assessment.type" />
							<selectionChoices>
								<selectionChoice>
									<displayMessage>
										<message selector="assessment-type-test" />
									</displayMessage>
									<valueMessage>
										<message template="test" />
									</valueMessage>
								</selectionChoice>
								<selectionChoice>
									<displayMessage>
										<message selector="assessment-type-assignment" />
									</displayMessage>
									<valueMessage>
										<message template="assignment" />
									</valueMessage>
								</selectionChoice>
								<selectionChoice>
									<displayMessage>
										<message selector="assessment-type-survey" />
									</displayMessage>
									<valueMessage>
										<message template="survey" />
									</valueMessage>
									<container separate="TRUE" indented="TRUE">
										<selection>
											<selectionChoices>
												<selectionChoice>
													<displayMessage>
														<message selector="formal-eval" />
													</displayMessage>
													<valueMessage>
														<message template="true" />
													</valueMessage>
												</selectionChoice>
											</selectionChoices>
											<model ref="assessment.formalCourseEval" />
											<readOnly>
												<decision model="assessment.isLocked" />
											</readOnly>
										<included>
											<compareDecision model="assessment.type" constant="survey" />
											<hasValueDecision model="allowEval" />
										</included>
										<destination template="/assessment_settings/{0}{1}">
								          <model ref="assessment.id" />
								          <model ref="return" />
							            </destination>
										</selection>
										<selection>
											<selectionChoices>
												<selectionChoice>
													<displayMessage>
														<message selector="notify-eval" />
													</displayMessage>
													<valueMessage>
														<message template="true" />
													</valueMessage>
													<container>
													<navigation style="LINK" submit="TRIGGER" title="eval-email-sample">
			                                        <icon icon="/icons/test.png" style="LEFT" />
			                                        <destination template="openWindow('/portal/tool/{0}/eval_notif/{1}',null,'toolbar=no,scrollbars=yes,resizable=yes,menubar=no,status=no,directories=no,location=no,width=600,height=400');">
			                                          <model ref="toolId" />
			                                          <model ref="assessment.id" />
			                                        </destination>
			                                        <included>
				                                      <compareDecision model="assessment.type" constant="survey" />
				                                      <decision model="assessment.formalCourseEval" />
											          <hasValueDecision model="allowEval" />
			                                        </included>
		                                            </navigation>
									</container>
								</selectionChoice>
							</selectionChoices>
											<model ref="assessment.notifyEval" />
											<readOnly>
												<decision model="assessment.isLocked" />
											</readOnly>
							<included>
											<compareDecision model="assessment.type" constant="survey" />
											<decision model="assessment.formalCourseEval" />
											<hasValueDecision model="allowEval" />
										</included>
										<destination template="/assessment_settings/{0}{1}">
								          <model ref="assessment.id" />
								          <model ref="return" />
							            </destination>
										</selection>
									</container>
								</selectionChoice>
							</selectionChoices>
							<included>
								<decision reversed="TRUE" model="assessment.isLocked" />
							</included>
							<destination template="/assessment_settings/{0}{1}">
								<model ref="assessment.id" />
								<model ref="return" />
							</destination>
						</selection>

						<!-- type when locked & not survey -->
						<selection id="type" title="type">
							<model ref="assessment.type" />
							<selectionChoices>
								<selectionChoice>
									<displayMessage>
										<message selector="assessment-type-test" />
									</displayMessage>
									<valueMessage>
										<message template="test" />
									</valueMessage>
								</selectionChoice>
								<selectionChoice>
									<displayMessage>
										<message selector="assessment-type-assignment" />
									</displayMessage>
									<valueMessage>
										<message template="assignment" />
									</valueMessage>
								</selectionChoice>
							</selectionChoices>
							<included>
								<decision model="assessment.isLocked" />
								<compareDecision reversed="TRUE" model="assessment.type" constant="survey" />
							</included>
							<destination template="/assessment_settings/{0}{1}">
								<model ref="assessment.id" />
								<model ref="return" />
							</destination>
						</selection>

						<!-- switch to survey when locked and not a survey -->
						<navigation title="change-to-survey" description="change-to-survey-description" style="LINK" submit="TRUE">
							<icon icon="/icons/survey_type.png" style="LEFT" />
							<destination template="SURVEY" />
							<confirm decision="TRUE" cancelSelector="cancel" cancelIcon="/icons/cancel.gif">
								<message selector="confirm-change-to-survey" />
							</confirm>
							<included>
								<decision model="assessment.isLocked" />
								<compareDecision reversed="TRUE" model="assessment.type" constant="survey" />
							</included>
						</navigation>

						<!-- display formal course evaluation if locked or user does not have eval permission -->
						<section>
							<included>
								<orDecision>
									<decision model="assessment.isLocked" />
									<hasValueDecision model="allowEval" reversed="TRUE" />
								</orDecision>
								<decision model="assessment.formalCourseEval" />
							</included>
							<container>
								<selection readOnly="TRUE">
									<title>
										<message selector="formal-eval-header">
											<model type="icon" icon="/icons/survey_type.png" />
										</message>
									</title>
									<selectionChoices>
										<selectionChoice>
											<displayMessage>
												<message selector="formal-eval" />
											</displayMessage>
											<valueMessage>
												<message template="true" />
											</valueMessage>
										</selectionChoice>
									</selectionChoices>
									<model ref="assessment.formalCourseEval" />
								</selection>
		
							    <selection readOnly="TRUE">
									<selectionChoices>
										<selectionChoice>
											<displayMessage>
												<message selector="notify-eval" />
											</displayMessage>
											<valueMessage>
												<message template="true" />
											</valueMessage>
											<container>
												<navigation style="LINK" submit="TRIGGER" title="eval-email-sample">
			                                      <icon icon="/icons/test.png" style="LEFT" />
			                                      <destination template="openWindow('/portal/tool/{0}/eval_notif/{1}',null,'toolbar=no,scrollbars=yes,resizable=yes,menubar=no,status=no,directories=no,location=no,width=600,height=400');">
			                                        <model ref="toolId" />
			                                        <model ref="assessment.id" />
			                                      </destination>
			                                      <included>
				                                    <compareDecision model="assessment.type" constant="survey" />
				                                    <decision model="assessment.formalCourseEval" />
											        <hasValueDecision model="allowEval" />
			                                      </included>
		                                        </navigation>
							               </container>
										</selectionChoice>
									</selectionChoices>
									<model ref="assessment.notifyEval" />
								</selection>
		                        <instructions>
							      <message selector="eval-last-sent">
								    <model type="date" ref="assessment.evaluationSent" />
							      </message>
							      <included>
								    <hasValueDecision model="assessment.evaluationSent" />
								    <compareDecision model="assessment.type" constant="survey" />
				                    <decision model="assessment.formalCourseEval" />
									<hasValueDecision model="allowEval" />
							     </included>
						         </instructions>

						         <navigation title="send" description="send-description" style="BUTTON" submit="TRUE" destination="EVALSEND">
							     <icon icon="/icons/email_go.png" style="LEFT" />
							     <included>
								   <hasValueDecision model="assessment.evaluationSent" />
								   <compareDecision model="assessment.type" constant="survey" />
				                   <decision model="assessment.formalCourseEval" />
								   <hasValueDecision model="allowEval" />
								 </included>
						         </navigation>
						         
							</container>
						</section>

						<selection title="needs-points">
							<selectionChoices>
								<selectionChoice>
									<displayMessage>
										<message selector="needs-points-points">
											<model type="enum" messageRoot="assessment-type-" ref="assessment.type" />
										</message>
									</displayMessage>
									<valueMessage>
										<message template="true" />
									</valueMessage>
								</selectionChoice>
							</selectionChoices>
							<model ref="assessment.needsPoints" />
							<destination template="/assessment_settings/{0}{1}">
								<model ref="assessment.id" />
								<model ref="return" />
							</destination>
							<included>
								<decision model="assessment.allowedPoints" />
							</included>
						</selection>

						<dateEdit id="odate" title="open-date">
							<model ref="assessment.dates.openDate" type="date" />
						</dateEdit>

						<selection>
					      <selectionChoices>
						    <selectionChoice>
							  <displayMessage>
								<message selector="hide-until-open" />
							  </displayMessage>
							  <valueMessage>
								<message template="true" />
							  </valueMessage>
						   </selectionChoice>
					     </selectionChoices>
					     <model ref="assessment.dates.hideUntilOpen" />
				        </selection>

						<dateEdit id="ddate" title="due-date" late="TRUE">
							<model ref="assessment.dates.dueDate" type="date" />
							<readOnly>
								<orDecision>
									<decision model="assessment.frozen" />
									<andDecision>
										<decision model="assessment.formalCourseEval" />
										<decision model="assessment.isLocked" />
									</andDecision>
								</orDecision>
							</readOnly>
						</dateEdit>

						<dateEdit id="adate" title="test-acceptUntilDate" late="TRUE">
							<model ref="assessment.dates.acceptUntilDate" type="date" />
							<readOnly>
								<orDecision>
									<decision model="assessment.frozen" />
									<andDecision>
										<decision model="assessment.formalCourseEval" />
										<decision model="assessment.isLocked" />
									</andDecision>
								</orDecision>
							</readOnly>
						</dateEdit>
					</container>
				</section>

				<selection title="allowTries">
					<included>
						<decision reversed="TRUE" model="assessment.formalCourseEval" />
					</included>
					<model ref="assessment.hasTriesLimit" />
					<selectionChoices>
						<selectionChoice>
							<displayMessage>
								<message selector="type-number" />
							</displayMessage>
							<valueMessage>
								<message template="true" />
							</valueMessage>
							<container>
								<countEdit>
									<readOnly>
										<decision model="assessment.formalCourseEval" />
									</readOnly>
									<model ref="assessment.tries" type="count" />
									<minValue>
										<model type="constant" value="1" />
									</minValue>
								</countEdit>
							</container>
						</selectionChoice>
						<selectionChoice>
							<displayMessage>
								<message selector="type-unlimited" />
							</displayMessage>
							<valueMessage>
								<message template="false" />
							</valueMessage>
						</selectionChoice>
					</selectionChoices>
				</selection>

				<selection title="timed-settings">
					<model ref="assessment.hasTimeLimit" />
					<selectionChoices>
						<selectionChoice>
							<displayMessage>
								<message selector="no-time-limit" />
							</displayMessage>
							<valueMessage>
								<message template="false" />
							</valueMessage>
						</selectionChoice>
						<selectionChoice>
							<displayMessage>
								<message selector="time-limit" />
							</displayMessage>
							<valueMessage>
								<message template="true" />
							</valueMessage>
							<container>
								<durationEdit>
									<model ref="assessment.timeLimit" type="duration" />
								</durationEdit>
								<toggle target="instructions" title="instructions" style="LINK" />
							</container>
						</selectionChoice>
					</selectionChoices>
				</selection>

				<!-- timed instructions overlay -->
				<overlay id="instructions">
					<container>
						<text selector="timed-instructions" />
						<gap />
					</container>
				</overlay>

				<section treatment="indented">
					<title>
						<message selector="reviewOptions">
							<model type="icon" icon="/icons/markedforreview.png" />
						</message>
					</title>
					<container>
						<selection>
							<title>
								<message selector="reviewOptionsWhen">
									<model type="icon" icon="/icons/markedforreview.png" />
								</message>
							</title>
							<model ref="assessment.review.timing" />
							<selectionChoices>
								<selectionChoice>
									<displayMessage>
										<message selector="type-submitted" />
									</displayMessage>
									<valueMessage>
										<message template="submitted" />
									</valueMessage>
								</selectionChoice>
								<selectionChoice>
									<displayMessage>
										<message selector="type-graded" />
									</displayMessage>
									<valueMessage>
										<message template="graded" />
									</valueMessage>
								</selectionChoice>
								<selectionChoice>
									<displayMessage>
										<message selector="type-date" />
									</displayMessage>
									<valueMessage>
										<message template="date" />
									</valueMessage>
									<container>
										<dateEdit>
											<model ref="assessment.review.date" type="date" />
										</dateEdit>
									</container>
								</selectionChoice>
								<selectionChoice>
									<displayMessage>
										<message selector="type-never" />
									</displayMessage>
									<valueMessage>
										<message template="never" />
									</valueMessage>
									<container separate="TRUE" reversed="TRUE">
									<selection>
										<selectionChoices>
											<selectionChoice>
											<displayMessage>
												<message selector="showSummary" />
											</displayMessage>
											<valueMessage>
												<message template="true" />
											</valueMessage>
												
										<container separate="TRUE" reversed="TRUE">
									
										<selection>
											<title>
												<message selector="reviewOptionsWhat">
													<model type="icon" icon="/icons/markedforreview.png" />
												</message>
											</title>
											<model ref="assessment.review.showCorrectAnswer" />
											<selectionChoices>
												<selectionChoice>
													<displayMessage>
														<message selector="showAnswerKey" />
													</displayMessage>
													<valueMessage>
														<message template="yes" />
													</valueMessage>
												</selectionChoice>
												<selectionChoice>
													<displayMessage>
														<message selector="correctAnswerKey" />
													</displayMessage>
													<valueMessage>
														<message template="correct_only" />
													</valueMessage>
												</selectionChoice>
												<selectionChoice>
													<displayMessage>
														<message selector="incorrectQuestions" />
													</displayMessage>
													<valueMessage>
														<message template="incorrect_only" />
													</valueMessage>
												</selectionChoice>
												<selectionChoice>
													<displayMessage>
														<message selector="noAnswerKey" />
													</displayMessage>
													<valueMessage>
														<message template="no" />
													</valueMessage>
												</selectionChoice>
											</selectionChoices>
											<included>
											  <compareDecision reversed="TRUE" model="assessment.type" constant="survey" />
							                </included>
										</selection>
										</container>
										</selectionChoice>
											</selectionChoices>
											<model ref="assessment.review.showSummary" />
										</selection>
										<selection>
											<selectionChoices>
												<selectionChoice>
													<displayMessage>
														<message selector="showFeedback" />
													</displayMessage>
													<valueMessage>
														<message template="true" />
													</valueMessage>
												</selectionChoice>
											</selectionChoices>
											<model ref="assessment.review.showFeedback" />
										</selection>
										
									</container>
									
								</selectionChoice>
							</selectionChoices>
						</selection>
					</container>
					
				</section>

				<section>
					<container>
						<selection>
							<title>
					  <message selector="awardCert">
					    <model type="icon" icon="/icons/award.png" />
					  </message>
					 </title>
					 <selectionChoices>
						<selectionChoice>
						<valueMessage>
							<message template="true" />
						</valueMessage>
						<container>
				        <text>
						  <message selector="minScore">
						  <model type="component">
							<container>
								<countEdit model="assessment.minScore" cols="3">
									<minValue>
										<model type="constant" value="0" />
									</minValue>
									<maxValue>
										<model type="constant" value="100" />
									</maxValue>
								</countEdit>								
							</container>
						  </model>
					     </message>
					  </text>
					  </container>
					  </selectionChoice>
					</selectionChoices>
					<model ref="assessment.minScoreSet" />
				  </selection>
			  </container>
			  <included>
			    <compareDecision reversed="TRUE" model="assessment.type" constant="survey" />
			  </included>  
		      </section>

				<section>
					<container>
						<selection>
							<title>
								<message selector="gradeOptions">
									<model type="icon" icon="/icons/grade.png" />
								</message>
							</title>
							<model ref="assessment.grading.autoRelease" />
							<selectionChoices>
								<selectionChoice>
									<displayMessage>
										<message selector="type-auto" />
									</displayMessage>
									<valueMessage>
										<message template="true" />
									</valueMessage>
								</selectionChoice>
								<selectionChoice>
									<displayMessage>
										<message selector="type-manual" />
									</displayMessage>
									<valueMessage>
										<message template="false" />
									</valueMessage>
								</selectionChoice>
							</selectionChoices>
						</selection>

						<selection>
							<title>
								<message selector="model-answer-header">
									<model type="icon" icon="/icons/model_answer.png" />
								</message>
							</title>
							<selectionChoices>
								<selectionChoice>
									<displayMessage>
										<message selector="model-answer-title" />
									</displayMessage>
									<valueMessage>
										<message template="true" />
									</valueMessage>
								</selectionChoice>
							</selectionChoices>
							<model ref="assessment.showModelAnswer" />
						</selection>

						<selection id="gb" title="sendgbook">
							<selectionChoices>
								<selectionChoice>
									<displayMessage>
										<message selector="sendgbook" />
									</displayMessage>
									<valueMessage>
										<message template="true" />
									</valueMessage>
								</selectionChoice>
							</selectionChoices>
							<model ref="assessment.grading.gradebookIntegration" />
							<included>
								<decision model="gradebookAvailable" />
								<decision model="assessment.hasPoints" />
							</included>
						</selection>

						<selection title="anonymous-header">
							<selectionChoices>
								<selectionChoice>
									<displayMessage>
										<message selector="anonymous" />
									</displayMessage>
									<valueMessage>
										<message template="true" />
									</valueMessage>
								</selectionChoice>
							</selectionChoices>
							<model ref="assessment.grading.anonymous" />
							<included>
								<compareDecision reversed="TRUE" model="assessment.type" constant="survey" />
							</included>
						</selection>
					</container>
				</section>

				<section treatment="indented">
					<title>
						<message selector="results-email-header">
							<model type="icon" icon="/icons/grade.png" />
						</message>
					</title>
					<container>

						<textEdit title="results-email" cols="40" rows="2">
							<model ref="assessment.resultsEmail" type="text" />
							<readOnly>
								<decision model="assessment.formalCourseEval" />
								<decision model="assessment.isLocked" />
							</readOnly>
						</textEdit>

						<instructions>
							<message selector="results-last-sent">
								<model type="date" ref="assessment.resultsSent" />
							</message>
							<included>
								<hasValueDecision model="assessment.resultsSent" />
							</included>
						</instructions>

						<navigation title="send" description="send-description" style="BUTTON" submit="TRUE" destination="SEND">
							<icon icon="/icons/email_go.png" style="LEFT" />
							<included>
								<hasValueDecision model="assessment.resultsSent" />
								<hasValueDecision model="assessment.resultsEmail" />
								<decision model="assessment.dates.isClosed" />
							</included>
						</navigation>

					</container>
				</section>

				<textEdit cols="16">
					<title>
						<message selector="password">
							<model type="icon" icon="/icons/password.png" />
						</message>
					</title>
					<model ref="assessment.password.password" type="text" />
				</textEdit>

			</container>
		</section>

		<section>
			<title highlighted="TRUE">
				<message selector="presentation" />
			</title>
			<container>

				<selection>
					<title>
						<message selector="honor-pledge">
							<model type="icon" icon="/icons/user_pledge.png" />
						</message>
					</title>
					<selectionChoices>
						<selectionChoice>
							<displayMessage>
								<message selector="require-users" />
							</displayMessage>
							<valueMessage>
								<message template="true" />
							</valueMessage>
						</selectionChoice>
					</selectionChoices>
					<model ref="assessment.requireHonorPledge" />
				</selection>

				<selection>
					<title>
						<message selector="hints-header">
							<model type="icon" icon="/icons/hints.png" />
						</message>
					</title>
					<selectionChoices>
						<selectionChoice>
							<displayMessage>
								<message selector="hints-title" />
							</displayMessage>
							<valueMessage>
								<message template="true" />
							</valueMessage>
						</selectionChoice>
					</selectionChoices>
					<model ref="assessment.showHints" />
				</selection>

				<selection>
					<title>
						<message selector="shuffle-header">
							<model type="icon" icon="/icons/arrow_switch.png" />
						</message>
					</title>
					<selectionChoices>
						<selectionChoice>
							<displayMessage>
								<message selector="shuffle-title" />
							</displayMessage>
							<valueMessage>
								<message template="true" />
							</valueMessage>
						</selectionChoice>
					</selectionChoices>
					<model ref="assessment.shuffleChoicesOverride" />
				</selection>

				<selection title="nav">
					<included>
						<compareDecision reversed="TRUE" model="assessment.type" constant="assignment" />
					</included>
					<model ref="assessment.randomAccess" />
					<selectionChoices>
						<selectionChoice>
							<displayMessage>
								<message selector="type-flex" />
							</displayMessage>
							<valueMessage>
								<message template="true" />
							</valueMessage>
							<container separate="TRUE">
								<selection title="layout">
									<model ref="assessment.questionGrouping" />
									<selectionChoices>
										<selectionChoice>
											<displayMessage>
												<message selector="type-question" />
											</displayMessage>
											<valueMessage>
												<message template="question" />
											</valueMessage>
										</selectionChoice>
										<selectionChoice>
											<displayMessage>
												<message selector="type-part" />
											</displayMessage>
											<valueMessage>
												<message template="part" />
											</valueMessage>
										</selectionChoice>
										<selectionChoice>
											<displayMessage>
												<message selector="type-assessment" />
											</displayMessage>
											<valueMessage>
												<message template="assessment" />
											</valueMessage>
										</selectionChoice>
									</selectionChoices>
								</selection>
							</container>
						</selectionChoice>
						<selectionChoice>
							<displayMessage>
								<message selector="type-strict" />
							</displayMessage>
							<valueMessage>
								<message template="false" />
							</valueMessage>
						</selectionChoice>
					</selectionChoices>
				</selection>

				<!-- in case the above is not included, don't loose this dependent selection -->
				<selection title="layout">
					<included>
						<compareDecision model="assessment.type" constant="assignment" />
					</included>
					<model ref="assessment.questionGrouping" />
					<selectionChoices>
						<selectionChoice>
							<displayMessage>
								<message selector="type-question" />
							</displayMessage>
							<valueMessage>
								<message template="question" />
							</valueMessage>
						</selectionChoice>
						<selectionChoice>
							<displayMessage>
								<message selector="type-part" />
							</displayMessage>
							<valueMessage>
								<message template="part" />
							</valueMessage>
						</selectionChoice>
						<selectionChoice>
							<displayMessage>
								<message selector="type-assessment" />
							</displayMessage>
							<valueMessage>
								<message template="assessment" />
							</valueMessage>
						</selectionChoice>
					</selectionChoices>
				</selection>

				<selection title="partSettings">
					<model ref="assessment.parts.continuousNumbering" />
					<selectionChoices>
						<selectionChoice>
							<displayMessage>
								<message selector="type-continuous" />
							</displayMessage>
							<valueMessage>
								<message template="true" />
							</valueMessage>
						</selectionChoice>
						<selectionChoice>
							<displayMessage>
								<message selector="type-restart" />
							</displayMessage>
							<valueMessage>
								<message template="false" />
							</valueMessage>
						</selectionChoice>
					</selectionChoices>
				</selection>

				<htmlEdit title="submitMessage">
					<model type="html" dirty="TRUE" ref="assessment.submitPresentation.text" />
				</htmlEdit>

			</container>
		</section>

		<section>
			<title highlighted="TRUE">
				<message selector="summary-title" />
			</title>
			<included>
				<decision reversed="TRUE" model="assessment.published" />
			</included>
			<container>

				<alert>
					<message selector="invalid">
						<model type="enum" messageRoot="assessment-type-" ref="assessment.type" />
						<model type="html" ref="invalidMsg" />
					</message>
					<included>
						<hasValueDecision model="invalidMsg" />
					</included>
				</alert>

				<text>
					<message selector="summary">
						<model type="enum" messageRoot="assessment-type-" ref="assessment.type" />
						<model ref="assessment.parts.numParts" />
						<model ref="assessment.parts.numQuestions" />
						<model ref="assessment.parts.totalPoints" />
						<selectors>
							<selector selector="summary-no-points">
								<decision reversed="TRUE" model="assessment.hasPoints" />
								<compareDecision reversed="TRUE" model="assessment.type" constant="survey" />
							</selector>
							<selector selector="summary-no-points-survey">
								<decision reversed="TRUE" model="assessment.hasPoints" />
								<compareDecision model="assessment.type" constant="survey" />
							</selector>
						</selectors>
					</message>
				</text>

				<text>
					<message selector="zero-parts">
						<model type="html" ref="zeroMsg" />
					</message>
					<included>
						<hasValueDecision model="zeroMsg" />
					</included>
				</text>

			</container>
		</section>

		<!-- navigation for publish -->
		<navigationBar>
			<container>
				<navigation title="done" accessKey="done-access" description="done-description" style="BUTTON" submit="TRUE">
					<destination template="{0}">
						<model ref="return" />
					</destination>
					<icon icon="/icons/return.png" style="LEFT" />
				</navigation>
				<divider />
				<navigation title="save" accessKey="save-access" description="save-description" style="BUTTON" submit="TRUE" destination="SAVE">
					<icon icon="/icons/save.png" style="LEFT" />
				</navigation>
				<divider />
				<navigation title="test-drive" accessKey="test-drive-access" description="test-drive-description" style="BUTTON" submit="TRUE">
					<destination template="/enter/{0}">
						<model ref="assessment.id" />
					</destination>
					<icon icon="/icons/test_drive.png" style="LEFT" />
				</navigation>
				<divider />
				<navigation title="publish" accessKey="publish-access" description="publish-description" style="BUTTON" submit="TRUE"
					destination="PUBLISH">
					<icon icon="/icons/OK.png" style="LEFT" />
					<confirm decision="TRUE" cancelSelector="cancel" cancelIcon="/icons/cancel.gif" selector="confirm-publish">
						<message selector="confirm-publish">
							<model ref="assessment.parts.totalPoints" />
							<selectors>
								<selector selector="confirm-publish-no-points">
									<decision reversed="TRUE" model="assessment.hasPoints" />
									<compareDecision reversed="TRUE" model="assessment.type" constant="survey" />
								</selector>
								<selector selector="confirm-publish-survey">
									<compareDecision model="assessment.type" constant="survey" />
								</selector>
							</selectors>
						</message>
					</confirm>
				</navigation>
			</container>
			<included>
				<decision model="assessment.isValid" />
				<decision reversed="TRUE" model="assessment.published" />
			</included>
		</navigationBar>

		<!-- navigation otherwise -->
		<navigationBar>
			<container>
				<navigation title="done" accessKey="done-access" description="done-description" style="BUTTON" submit="TRUE">
					<destination template="{0}">
						<model ref="return" />
					</destination>
					<icon icon="/icons/return.png" style="LEFT" />
				</navigation>
				<divider />
				<navigation title="save" accessKey="save-access" description="save-description" style="BUTTON" submit="TRUE" destination="SAVE">
					<icon icon="/icons/save.png" style="LEFT" />
				</navigation>
				<divider />
				<navigation title="test-drive" accessKey="test-drive-access" description="test-drive-description" style="BUTTON" submit="TRUE">
					<destination template="/enter/{0}">
						<model ref="assessment.id" />
					</destination>
					<icon icon="/icons/test_drive.png" style="LEFT" />
					<included>
						<decision model="assessment.isValid" />
					</included>
				</navigation>
			</container>
			<included>
				<orDecision>
					<decision model="assessment.published" />
					<decision reversed="TRUE" model="assessment.isValid" />
				</orDecision>
			</included>
		</navigationBar>

	</container>

	<footer>
		<container>
			<finePrint>
				<message selector="id-display">
					<model ref="assessment.id" />
				</message>
			</finePrint>
			<finePrint>
				<message selector="history-createText">
					<model type="userInfo" selector="DISPLAYNAME" ref="assessment.createdBy.UserId" />
					<model type="date" ref="assessment.createdBy.date" />
				</message>
			</finePrint>
			<finePrint>
				<message selector="history-modifyText">
					<model type="userInfo" selector="DISPLAYNAME" ref="assessment.modifiedBy.UserId" />
					<model type="date" ref="assessment.modifiedBy.date" />
				</message>
			</finePrint>
		</container>
	</footer>

</interface>
